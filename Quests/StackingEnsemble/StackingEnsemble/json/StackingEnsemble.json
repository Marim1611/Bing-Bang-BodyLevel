{
    "info": {
        "time": [
            "12:20:09",
            "12:21:29",
            "12:23:11",
            "12:27:06",
            "13:14:13",
            "13:15:02",
            "13:19:10",
            "13:19:57",
            "13:21:17",
            "13:22:08",
            "13:23:29",
            "13:26:54",
            "15:56:48",
            "16:07:29",
            "16:09:31",
            "16:11:27",
            "16:24:34"
        ],
        "date": [
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23",
            "05/11/23"
        ],
        "duration": [
            "26.57 s",
            "26.41 s",
            "26.18 s",
            "27.59 s",
            "26.26 s",
            "20.62 s",
            "33.76 s",
            "34.09 s",
            "32.69 s",
            "32.88 s",
            "32.84 s",
            "1.06 min",
            "34.74 s",
            "20.15 s",
            "1.13 min",
            "19.37 s",
            "19.83 s"
        ],
        "id": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17
        ]
    },
    "read_data": {
        "kind": [
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            "Numerical",
            null,
            "Numerical",
            "Numerical"
        ],
        "standardize": [
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True",
            "True"
        ],
        "split": [
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train",
            "train"
        ],
        "encode": [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            "OneHot",
            null,
            null
        ]
    },
    "StackingClassifier": {
        "final_estimator": [
            "LogisticRegression(multi_class='multinomial')",
            "LogisticRegression(multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=2000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1500, multi_class='multinomial')",
            "LogisticRegression(max_iter=900, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')",
            "LogisticRegression(max_iter=1000, multi_class='multinomial')"
        ],
        "stack_method": [
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto",
            "auto"
        ],
        "passthrough": [
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False",
            "False"
        ],
        "verbose": [
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0"
        ]
    },
    "cross_val_predict": {
        "estimator": [
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf',\n                      ...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier...",
            "StackingClassifier(estimators=[('rf', RandomForestClassifier..."
        ],
        "cv": [
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5",
            "5"
        ],
        "verbose": [
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0",
            "0"
        ],
        "pre_dispatch": [
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs",
            "2*n_jobs"
        ],
        "method": [
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict",
            "predict"
        ]
    },
    "metrics": {
        "accuracy": [
            0.964406779661017,
            0.9771186440677966,
            0.9779661016949153,
            0.976271186440678,
            0.9771186440677966,
            0.976271186440678,
            0.9779661016949153,
            0.976271186440678,
            0.9745762711864406,
            0.9771186440677966,
            0.9771186440677966,
            0.9771186440677966,
            0.9796610169491525,
            0.9813559322033898,
            0.9771186440677966,
            0.9813559322033898,
            0.9805084745762712
        ]
    }
}